{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","cn","TodoList","todos","map","getUser","userId","usersFromServer","find","getNewTodoId","Math","max","groupedTodos","App","useState","setTodos","setUserId","userErrorMessage","setUserErrorMessage","setTitle","titleErrorMessage","setTitleErrorMessage","action","method","onSubmit","event","preventDefault","data","newTodo","currentTodo","addNewTodo","type","value","placeholder","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f07d329f.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const { user, title, completed } = todo;\n\n  return (\n    <article\n      data-id={todo.id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <>\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </>\n);\n","import './App.scss';\n\nimport React, { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\n\nfunction getUser(userId: number) {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nfunction getNewTodoId(todos: Todo[]) {\n  const maxId = Math.max(...todos.map(todo => todo.id));\n\n  return maxId + 1;\n}\n\nconst groupedTodos: Todo[] = todosFromServer.map(todo => {\n  return {\n    ...todo,\n    user: getUser(todo.userId),\n  };\n});\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>(groupedTodos);\n\n  const [userId, setUserId] = useState(0);\n  const [userErrorMessage, setUserErrorMessage] = useState('');\n\n  const [title, setTitle] = useState('');\n  const [titleErrorMessage, setTitleErrorMessage] = useState('');\n\n  const addNewTodo = ({ id, ...data }: Todo) => {\n    const newTodo = {\n      id: getNewTodoId(todos),\n      ...data,\n    };\n\n    setTodos((currentTodo) => [...currentTodo, newTodo]);\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleErrorMessage('');\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setUserErrorMessage('');\n  };\n\n  const resetForm = () => {\n    setTitle('');\n    setUserId(0);\n    setTitleErrorMessage('');\n    setUserErrorMessage('');\n  };\n\n  const handleSubmitForm = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (!title) {\n      setTitleErrorMessage('Please enter a title');\n    }\n\n    if (!userId) {\n      setUserErrorMessage('Please choose a user');\n    }\n\n    if (!title || !userId) {\n      return;\n    }\n\n    addNewTodo({\n      id: 0,\n      title,\n      userId,\n      completed: false,\n      user: getUser(userId),\n    });\n\n    resetForm();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmitForm}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            value={title}\n            placeholder=\"Enter a title\"\n            data-cy=\"titleInput\"\n            onChange={handleTitleChange}\n          />\n\n          {titleErrorMessage && (\n            <span className=\"error\">\n              {titleErrorMessage}\n            </span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleUserChange}\n          >\n            <option value=\"0\" disabled>\n              Choose a user\n            </option>\n            {usersFromServer.map((user) => (\n              <option key={user.id} value={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {userErrorMessage && (\n            <span className=\"error\">\n              {userErrorMessage}\n            </span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <TodoList todos={todos} />\n      </section>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}